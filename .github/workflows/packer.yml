name: Deploy Web App on EC2 (AWS) and Run Integration Tests

on:
  pull_request_target:
    types: [closed]
    branches:
      - main

jobs:
  deploy_and_test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: "${{secrets.DB_ROOT_PASSWORD}}" 
          MYSQL_DATABASE: "${{secrets.DB_NAME}}"             
          MYSQL_USER: "${{secrets.DB_USER}}"               
          MYSQL_PASSWORD: "${{secrets.DB_PASSWORD}}"     
        ports:
          - 3306:3306

    steps:
    # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up environment file
        run: |
          echo "hostname=${{secrets.DB_HOST}}" >> .env
          echo "username=${{secrets.DB_USER}}" >> .env
          echo "password=${{secrets.DB_PASSWORD}}" >> .env 
          echo "database=${{secrets.DB_NAME}}" >> .env        
          echo "port=${{secrets.DB_PORT}}" >> .env

      - name: Install dependencies
        run: npm install

      - name: Wait for MySQL to be ready
        run: sleep 20

      - name: Run tests
        run: npm test

      - name: Set up environment file
        run: |
          echo "hostname=${{secrets.DB_HOST}}" >> .env
          echo "username=${{secrets.DB_USER}}" >> .env
          echo "password=${{secrets.DB_PASSWORD}}" >> .env 
          echo "database=${{secrets.DB_NAME}}" >> .env        
          echo "port=${{secrets.DB_PORT}}" >> .env

      - name: Make zip
        run: zip -r webapp.zip .

    # Step 2: Set up AWS CLI
      - name: Set up AWS CLI
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set region us-east-1

      # Step 4: Run Packer to create EC2 instance (Make sure Packer is installed and configured)
      - name: Initialize packer to create EC2 instance
        run: |
          packer init aws-custom-image.pkr.hcl

      # Step 4: Run Packer to create EC2 instance (Make sure Packer is installed and configured)
      - name: Run Packer to create EC2 instance
        run: |
          packer build aws-custom-image.pkr.hcl
